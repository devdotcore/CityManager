// <auto-generated />
using System;
using CityManager.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CityManager.Migrations
{
    [DbContext(typeof(CityManagerDbContext))]
    partial class CityManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CityManager.Repository.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateEstablished")
                        .HasColumnType("datetime");

                    b.Property<long>("EstimatedPopulation")
                        .HasColumnType("bigint");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<short>("TouristRating")
                        .HasColumnType("smallint");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CityManager.Repository.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Alpha2Code")
                        .HasColumnType("text");

                    b.Property<string>("Alpha3Code")
                        .HasColumnType("text");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("CountryId");

                    b.HasIndex("CityId")
                        .IsUnique();

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CityManager.Repository.Country", b =>
                {
                    b.HasOne("CityManager.Repository.City", "City")
                        .WithOne("Country")
                        .HasForeignKey("CityManager.Repository.Country", "CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
